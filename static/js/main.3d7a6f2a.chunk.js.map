{"version":3,"sources":["components/VideoControl.js","components/Game.js","components/VideoList.js","components/Card.js","components/ProfileReadOnly.js","components/ItemListItem.js","components/ItemList.js","components/Profile.js","components/Badges.js","components/HighScore.js","components/HighScoreCards.js","components/Help.js","components/Number.js","components/CatergoryCards.js","components/CategoryCard.js","components/Categories.js","components/Americano.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/Likes.js","models/User.js","models/Season.js","models/Player.js","models/Team.js","models/Game.js","models/LevelStore.js","Api/SkillstaApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","hasSharedPath","react_default","a","createElement","onClick","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","ITEM_HEIGHT","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","onChange","level","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","setAnchorEl","_React$useState5","_React$useState6","anchorChipEl","setAnchorChipEl","open","Boolean","handleClose","option","setLevelFilter","handleChipClose","season","switchSeason","getAvatarColor","category","backgroundColor","className","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","FilterList_default","levelFilter","text","Menu_Menu","keepMounted","onClose","PaperProps","style","maxHeight","levelFilters","MenuItem","key","selected","textAlign","Chip","variant","label","viewSeasonObject","seasonInfoText","clickable","chip","color","onDelete","deleteIcon","Button","object","Menu_default","seasonsWithoutView","friendlyName","filteredLevels","i","visibility_sensor_default","Card","CardHeader","Avatar","fontSize","attributeText","title","name","subheader","displayText","CardContent","components_VideoControl","Typography","component","details","Collapse","in","timeout","unmountOnExit","isActiveSeason","e","file","target","files","processFile","VideoCall_default","root","display","flexWrap","justifyContent","overflow","palette","background","paper","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","length","tile","img","alt","GridListTileBar","subtitle","challange","_useState","hasAnimatedCards","_useState2","setIsActive","_useState3","_useState4","showBack","setShowBack","isActiveClassBack","concat","imageStyle","backgroundImage","cardImage","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","setHasAnimatedCards","xmlns","viewBox","fill","d","totalRating","position","paragraph","firstName","THERating","DRIRating","BALRating","PHYRating","container","textField","spacing","marginRight","dense","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","shirtNumber","values","ArrowBackIos_default","selectProfile","noValidate","autoComplete","components_Card","TextField","disabled","value","margin","red","AdminItemStatusAction","_ref2","item","comment","newComment","setNewComment","loggedIn","isWaitingForApproval","Star_default","setStatus","ThumbDown_default","ItemStatusAction","_ref3","isDone","game","isRejected","AccountCircle_default","filteredItems","action","fileType","hasComment","CardActions","ThumbUp_default","like","likes","items","offset","top","refresh","onChangeRefresh","components_ItemListItem","components_ProfileReadOnly","onLogout","setValues","handleChange","objectSpread","defineProperty","uploadImage","Image_default","location","reload","updateUser","window","localStorage","removeItem","badges","prices","badge","Security_default","count","flexGrow","Fragment","gutterBottom","List","highScoreList","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","Paper","Home_default","Person_default","Tablet_default","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","tick","setState","this","interval","prevProps","prevState","_this2","setRunningApp","Component","attributes","attribute","selectAttribute","CardActionArea","CardMedia","image","Count","ChevronLeft_default","selectedAttribute","filterLevelsByAttribute","marginBottom","opacity","components_CategoryCard","components_CatergoryCards","table","americano","Table","TableHead","TableRow","TableCell","align","TableBody","americanoStat","p","player","scope","goals","americanoRandom","americanoReverse","g","gameName","defaultValue","team1","setGoals","team2","padding","players","TabContainer","children","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListNumbered_default","Help_default","components_ItemList","components_Categories","components_HighScoreCards","components_Profile","components_Americano","Login","onLogin","setUserName","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Attribute","BAL","THE","DRI","PHY","Level","types","model","string","integer","maybeNull","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","getRoot","currentSeason","levelStore","some","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","newStatus","api","updateItem","find","itemId","unLike","date","getFullYear","getMonth","getDate","users","points","Likes","remove","getPointsByAttribute","getCountByAttribute","itemsFromCurrentAndOldSeason","User","optional","split","round","seasons","badgeData","nextChallange","setProfileImage","Season","startDate","endDate","countDown","abs","getTime","isCurrentSeason","isViewedNow","viewSeason","startDateFriendly","endDateFriendly","Player","Team","array","uniqueId","reduce","b","goal","isNaN","parseInt","Game","americanoPlayerList","Attributes","short","LevelStore","americanoPlayers","stat","forEach","pp","push","sort","y","reverse","currentSeasonObject","byHighscore","slice","americanoGameCount","americanoGames","initzialize","removeUser","getNewGame","shuffled","players1","textA","toUpperCase","textB","players2","mobxGame","setStartSeason","_switchSeason","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","setColorCount","app","profile","fetchAll","_fetchAll","_callee2","data","_context2","getUsers","sent","fetchSeasons","s","fields","check","fetchLevels","fetchItems","fetchLikes","elm","abrupt","_refresh","_callee3","_context3","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context4","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","onload","myObj","responseText","public_id","send","isImage","uploadUrl","insertItem","base","Airtable","apiKey","config","view","maxRecords","url","SkillstaApi","generalRequest","filterByFromula","conf","assign","includeFields","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_getUsers","u","lastFetch","toLocaleDateString","toLocaleTimeString","update","_fetchSeasons","select","all","_fetchLevels","_callee4","_args4","_fetchItems","_callee5","_args5","_context5","_fetchLikes","_callee6","_context6","body","Content-Type","fetchUsers","_fetchUsers","_callee7","_context7","delete","destroy","deletedRecords","record","getId","get","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d7a6f2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {});\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorChipEl, setAnchorChipEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    if (option.id || option.id === 0) {\r\n      store.setLevelFilter(option);\r\n    }\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleChipClick(event, object) {\r\n    setAnchorChipEl(event.currentTarget);\r\n  }\r\n\r\n  function handleChipClose(option) {\r\n    if (option.season || option.season === 0) {\r\n      store.switchSeason(option);\r\n    }\r\n    setAnchorChipEl(null);\r\n  }\r\n\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"black\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <IconButton\r\n        aria-label=\"More\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <FilterListIcon />\r\n        {store.levelFilter.text}\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200\r\n          }\r\n        }}\r\n      >\r\n        {store.levelFilters.map(option => (\r\n          <MenuItem\r\n            key={option.id}\r\n            selected={option.id === store.levelFilter}\r\n            onClick={() => handleClose(option)}\r\n          >\r\n            {option.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Chip\r\n          variant=\"outlined\"\r\n          label={store.viewSeasonObject.seasonInfoText}\r\n          clickable\r\n          className={classes.chip}\r\n          color=\"primary\"\r\n          onDelete={() => {}}\r\n          deleteIcon={\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleChipClick}\r\n              >\r\n                <MenuIcon style={{ color: \"#3f51b5\" }} />\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorChipEl}\r\n                keepMounted\r\n                open={Boolean(anchorChipEl)}\r\n                onClose={handleChipClose}\r\n              >\r\n                {store.seasonsWithoutView.map(season => (\r\n                  <MenuItem\r\n                    key={season.season}\r\n                    onClick={() => handleChipClose(season)}\r\n                  >\r\n                    {season.friendlyName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {store.filteredLevels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.id}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"Recipe\"\r\n                  style={getAvatarColor(level)}\r\n                  className={classes.avatar}\r\n                >\r\n                  <span style={{ fontSize: \"16px\" }}>\r\n                    {level.attributeText}\r\n                  </span>\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.displayText}\r\n            />\r\n\r\n            <CardContent>\r\n              <VideoControl store={store} settings={level} />\r\n              {/* <Video\r\n                onClick={() => goFullScreen(level)}\r\n                id={level.id}\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n                preload=\"none\"\r\n                poster={level.poster}\r\n              /> */}\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              {level.isActiveSeason && (\r\n                <CardContent>\r\n                  <div className=\"card-content2\">\r\n                    <div className=\"fileinputs\">\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"file\"\r\n                        onChange={e => processFile(e, level)}\r\n                      />\r\n                      <div className=\"fakefile\">\r\n                        <Button variant=\"outlined\">\r\n                          Ladda upp <VideoIcon />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              )}\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../card.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nfunction Card({ store, user }) {\r\n  const [isActive, setIsActive] = useState(store && store.hasAnimatedCards);\r\n  const [showBack, setShowBack] = useState(false);\r\n  const isActiveClass = !showBack ? \"active\" : \"active2\";\r\n  const isActiveClassBack = showBack ? \"active\" : \"\";\r\n\r\n  const classes = `${isActiveClass}`;\r\n  const classesBack = `${isActiveClassBack}`;\r\n  const imageStyle = {\r\n    backgroundImage: `url(${user.cardImage})`\r\n  };\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n    setIsActive(true);\r\n    store.setHasAnimatedCards(true);\r\n  }, 10);\r\n\r\n  function onCardClick() {\r\n    setShowBack(!showBack);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cardWrapper\">\r\n      <div id=\"card\" onClick={onCardClick} className={classes}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 267.3 427.3\">\r\n          <clipPath id=\"svgPath\">\r\n            <path\r\n              fill=\"#000\"\r\n              d=\"M265.3 53.9a33.3 33.3 0 0 1-17.8-5.5 32 32 0 0 1-13.7-22.9c-.2-1.1-.4-2.3-.4-3.4 0-1.3-1-1.5-1.8-1.9a163 163 0 0 0-31-11.6A257.3 257.3 0 0 0 133.7 0a254.9 254.9 0 0 0-67.1 8.7 170 170 0 0 0-31 11.6c-.8.4-1.8.6-1.8 1.9 0 1.1-.2 2.3-.4 3.4a32.4 32.4 0 0 1-13.7 22.9A33.8 33.8 0 0 1 2 53.9c-1.5.1-2.1.4-2 2v293.9c0 3.3 0 6.6.4 9.9a22 22 0 0 0 7.9 14.4c3.8 3.2 8.3 5.3 13 6.8 12.4 3.9 24.8 7.5 37.2 11.5a388.7 388.7 0 0 1 50 19.4 88.7 88.7 0 0 1 25 15.5v.1-.1c7.2-7 16.1-11.3 25-15.5a427 427 0 0 1 50-19.4l37.2-11.5c4.7-1.5 9.1-3.5 13-6.8 4.5-3.8 7.2-8.5 7.9-14.4.4-3.3.4-6.6.4-9.9V231.6 60.5v-4.6c.4-1.6-.3-1.9-1.7-2z\"\r\n            />\r\n          </clipPath>\r\n        </svg>\r\n        <div id=\"card-inner\">\r\n          <div id=\"card-top\">\r\n            <div className=\"info\">\r\n              <div className=\"value\">{user.totalRating}</div>\r\n              <div className=\"position\">{user.position}</div>\r\n              <div className=\"country\">\r\n                <div />\r\n              </div>\r\n              <div className=\"club\">\r\n                <div />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"image\" style={imageStyle} />\r\n            <div className=\"backfont\">SKILLZTA</div>\r\n            {showBack && (\r\n              <div className=\"price\">\r\n                <Typography paragraph>Utmärkelser</Typography>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div id=\"card-bottom\">\r\n            <div className=\"name\">{user.firstName}</div>\r\n            <div className=\"stats\">\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <span>{user.THERating}</span>\r\n                    <span>TEK</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>{user.DRIRating}</span>\r\n                    <span>DRI</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <span>{user.BALRating}</span>\r\n                    <span>KON</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>{user.PHYRating}</span>\r\n                    <span>FYS</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Card);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Card store={store} user={store.selectedProfile} />\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        {/* <VideoList store={store} user={store.selectedProfile} /> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction ItemListItem({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function AdminItemStatusAction({ item, store }) {\r\n    const [newComment, setNewComment] = React.useState(\r\n      item.comment ? item.comment : \"\"\r\n    );\r\n    const updateComment = event => {\r\n      setNewComment(event.target.value);\r\n    };\r\n\r\n    if (store.loggedIn.userName === \"admin\" && item.isWaitingForApproval) {\r\n      return (\r\n        <div>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Namn\"\r\n            className={classes.textField}\r\n            value={newComment}\r\n            onChange={updateComment}\r\n            margin=\"normal\"\r\n          />\r\n          <StarIcon onClick={() => item.setStatus(\"DONE\", newComment)} />\r\n          <ThumbDownIcon\r\n            onClick={() => item.setStatus(\"REJECTED\", newComment)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function ItemStatusAction({ item, store }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  if (store.filteredItems.length === 0) {\r\n    return (\r\n      <div className=\"banner\">\r\n        <div className=\"banner-text\">\r\n          <span>Du kan fortfarande bli först. Välj en utmaning</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return store.filteredItems.map((item, i) => (\r\n    <VisibilitySensor\r\n      key={item.publicId}\r\n      onChange={isVisible => onChange(item, isVisible)}\r\n    >\r\n      <Card key={item.publicId} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              <Image\r\n                cloudName=\"deolievif\"\r\n                publicId={item.user.profileImage}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Avatar>\r\n          }\r\n          action={<ItemStatusAction item={item} store={store} />}\r\n          title={\r\n            <div onClick={() => store.selectProfile(item.user)}>\r\n              {item.user.name}\r\n            </div>\r\n          }\r\n          subheader={`${item.game.attributeText} - ${item.game.name}`}\r\n        />\r\n        <CardContent>\r\n          {item.fileType === \"video\" && (\r\n            <VideoControl store={store} settings={item} />\r\n          )}\r\n          {item.fileType === \"image\" && (\r\n            <Image\r\n              cloudName=\"deolievif\"\r\n              publicId={item.publicId}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          )}\r\n\r\n          {item.hasComment && (\r\n            <div className=\"comments\">\r\n              <Typography\r\n                variant=\"overline\"\r\n                style={{ color: \"gray\", fontSize: \"10px\" }}\r\n              >\r\n                Från tränaren:\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">{item.comment}</Typography>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n            {item.displayText} - <ThumbUpIcon onClick={item.like} />{\" \"}\r\n            {item.likes} Likes{\" \"}\r\n          </Typography>\r\n          <AdminItemStatusAction item={item} store={store} />\r\n        </CardActions>\r\n      </Card>\r\n    </VisibilitySensor>\r\n  ));\r\n}\r\n\r\nexport default observer(ItemListItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport ItemListItem from \"./ItemListItem\";\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n    const a = store.items.length;\r\n    console.log(a);\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile && <ItemListItem store={store} />}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n        <Button variant=\"outlined\" onClick={() => document.location.reload()}>\r\n          Uppdatera appen\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"favoriteTeam\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          onChange={handleChange(\"favoriteTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"playerTeam\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          onChange={handleChange(\"playerTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"position\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          onChange={handleChange(\"position\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"shirtNumber\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          onChange={handleChange(\"shirtNumber\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\n\r\nfunction Badges({ store, user }) {\r\n  return (\r\n    <div>\r\n      {user.badges.map(category => (\r\n        <div>\r\n          {category.title}\r\n          {category.prices.map(badge => (\r\n            <div>\r\n              <SecurityIcon style={{ color: badge.color }} />\r\n              {badge.count} {badge.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Badges);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badges from \"./Badges\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA {store.viewSeasonObject.friendlyName}\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Badges store={store} user={store.loggedIn} /> */}\r\n\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScoreCards({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA {store.viewSeasonObject.friendlyName}\r\n        </Typography>\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom />\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <Card key={user.id} store={store} user={user} />\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScoreCards);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography paragraph />\r\n\r\n      <Typography paragraph>Utmaningarna är i fyra kategorier.</Typography>\r\n\r\n      <Typography paragraph>\r\n        KON = BOLL KONTROLL. Här gäller det att kunna klara av att hantera\r\n        bollen på ett smidigt sätt.\r\n      </Typography>\r\n\r\n      <Typography paragraph>\r\n        TEK - TEKNIK. Här är det mycket kickningar och trix.\r\n      </Typography>\r\n\r\n      <Typography paragraph>\r\n        DRI - DRIBBLINGAR. Här gäller det att få till olika finter och driva\r\n        bollen\r\n      </Typography>\r\n\r\n      <Typography paragraph>\r\n        FYS - FYSIK. Här handlar det om att bli starkare, men även en del\r\n        skottövningar som kräver styrka och teknik.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <HomeIcon /> Hem\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens användaruppladde filmer.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <AccountCircleIcon />\r\n          Under utvärdering för att se om man klarat det.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <StarIcon />\r\n          Klarad utmaning\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <ThumbDownIcon />\r\n          Utmaning misslyckad. Bara att försöka igen. Kanske hade du inte flytet\r\n          i utmaningen, eller missförtått något. Kontrollera videon och\r\n          instruktionerna och försök igen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Om du klickar på personens namn så kan du se profilen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Klicka på videon för att se den i helskärm.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Utmaningar\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens utmaningar. Det finns 3 olika\r\n          nivåer. Lätt, medium, svår.\r\n        </Typography>\r\n\r\n        <Typography paragraph>\r\n          <VideoIcon />\r\n          Klicka på denna för att ladda upp en film. Filma alltid i horisontellt\r\n          läge.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Topplistan\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Du kan just nu få 90 som mest i din totala raiting.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <PersonIcon /> Profil\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här kan du ladda upp din profilbild och andra användarinställningar.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      {/* <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button> */}\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: \"20px\"\r\n  },\r\n  media: {\r\n    height: 210,\r\n    paddingTop: \"56.25%\"\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  text: {\r\n    margin: \"10px\"\r\n  }\r\n}));\r\n\r\nfunction CatergoryCards({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"game\">\r\n      {store.attributes.map((attribute, i) => (\r\n        <Card\r\n          key={i}\r\n          className={classes.card}\r\n          onClick={() => store.selectAttribute(attribute)}\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={attribute.image}\r\n              title={attribute.text}\r\n            />\r\n            <CardContent>\r\n              <Typography\r\n                className={classes.text}\r\n                gutterBottom\r\n                variant=\"h5\"\r\n                component=\"h2\"\r\n              >\r\n                {attribute.text}\r\n              </Typography>\r\n              <Typography\r\n                className={classes.text}\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                Du har klarat {store.loggedIn.Count(attribute)} av 10\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(CatergoryCards);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\"\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {}\r\n}));\r\n\r\nfunction CategoryCard({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {});\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorChipEl, setAnchorChipEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    if (option.id || option.id === 0) {\r\n      store.setLevelFilter(option);\r\n    }\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleChipClick(event, object) {\r\n    setAnchorChipEl(event.currentTarget);\r\n  }\r\n\r\n  function handleChipClose(option) {\r\n    if (option.season || option.season === 0) {\r\n      store.switchSeason(option);\r\n    }\r\n    setAnchorChipEl(null);\r\n  }\r\n\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"black\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div onClick={() => store.selectAttribute()}>\r\n        <ArrowLeftIcon />\r\n        {store.selectedAttribute.text}\r\n      </div>\r\n      {store.filterLevelsByAttribute.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.id}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"Recipe\"\r\n                  style={getAvatarColor(level)}\r\n                  className={classes.avatar}\r\n                >\r\n                  <span style={{ fontSize: \"16px\" }}>\r\n                    {level.attributeText}\r\n                  </span>\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.displayText}\r\n            />\r\n\r\n            <CardContent>\r\n              <VideoControl store={store} settings={level} />\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              {level.isActiveSeason && (\r\n                <CardContent>\r\n                  <div className=\"card-content2\">\r\n                    <div className=\"fileinputs\">\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"file\"\r\n                        onChange={e => processFile(e, level)}\r\n                      />\r\n                      <div className=\"fakefile\">\r\n                        <Button variant=\"outlined\">\r\n                          Ladda upp <VideoIcon />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              )}\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n      <Card\r\n        key=\"locked\"\r\n        style={{ marginBottom: \"20px\" }}\r\n        className={classes.card}\r\n      >\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              <span style={{ fontSize: \"16px\" }}>\r\n                {store.selectedAttribute.short}\r\n              </span>\r\n            </Avatar>\r\n          }\r\n          title=\"Låst\"\r\n          subheader=\"\"\r\n        />\r\n\r\n        <CardActionArea>\r\n          <CardMedia\r\n            style={{ opacity: 0.5 }}\r\n            className={classes.media}\r\n            image=\"locked.jpg\"\r\n          />\r\n          <CardContent>\r\n            <div className=\"card-content\">\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Klara av mer övningar för att låsa upp fler.\r\n              </Typography>\r\n            </div>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(CategoryCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CatergoryCards from \"./CatergoryCards\";\r\nimport CategoryCard from \"./CategoryCard\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: \"20px\"\r\n  },\r\n  media: {\r\n    height: 210,\r\n    paddingTop: \"56.25%\"\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  }\r\n}));\r\n\r\nfunction Categories({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  return !store.selectedAttribute ? (\r\n    <CatergoryCards store={store} />\r\n  ) : (\r\n    <CategoryCard store={store} />\r\n  );\r\n}\r\n\r\nexport default observer(Categories);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {}\r\n});\r\n\r\nfunction Americano({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {/* <Paper className=\"help\">\r\n        {store.americano.map(g => (\r\n          <>\r\n            <span>{g.gameName}</span>\r\n            <div>\r\n              {g.team1.goals}-{g.team2.goals}\r\n            </div>\r\n          </>\r\n        ))}\r\n      </Paper> */}\r\n      <div className=\"help\">Antal matcher {store.americano.length} st</div>\r\n      <Paper className=\"americanoGame\">\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Spelare</TableCell>\r\n              <TableCell align=\"right\">Poäng</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {store.americanoStat.map(p => (\r\n              <TableRow key={p.player.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {p.player.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{p.goals}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      {store.americano.length < 10 && (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button\r\n            onClick={store.americanoRandom}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Ny match\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {store.americanoReverse.map(g => (\r\n        <Paper key={g.gameName} className=\"americanoGame\">\r\n          <div style={{ textAlign: \"center\", fontSize: \"30px\" }}>\r\n            {g.gameName}\r\n          </div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <input\r\n              min=\"1\"\r\n              max=\"5\"\r\n              type=\"number\"\r\n              style={{ width: \"16px\", fontSize: \"20px\" }}\r\n              defaultValue={g.team1.goals}\r\n              onChange={e => g.team1.setGoals(e.target.value)}\r\n            />\r\n            <span> - </span>\r\n            <input\r\n              min=\"1\"\r\n              max=\"5\"\r\n              type=\"number\"\r\n              style={{ width: \"16px\", fontSize: \"20px\" }}\r\n              defaultValue={g.team2.goals}\r\n              onChange={e => g.team2.setGoals(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={{ backgroundColor: \"\", padding: \"10px\" }}>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {g.team1.players.map(x => (\r\n                <img\r\n                  className=\"playerCard\"\r\n                  src={x.image}\r\n                  style={{ width: \"90px\" }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <img src=\"vsloggo2.png\" style={{ width: \"100px\" }} />\r\n          </div>\r\n          <div style={{ backgroundColor: \"\", padding: \"10px\" }}>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {g.team2.players.map(x => (\r\n                <img\r\n                  className=\"playerCard\"\r\n                  src={x.image}\r\n                  style={{ width: \"90px\" }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Americano);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport HighScoreCards from \"./HighScoreCards\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\nimport Categories from \"./Categories\";\r\nimport Americano from \"./Americano\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(store.items.length === 0 ? 4 : 0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<HomeIcon />} />\r\n          <Tab icon={<StarIcon />} />\r\n          <Tab icon={<FormatListNumberedIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          {/* <Game store={store} /> */}\r\n          <Categories store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          {/* <HighScore store={store} /> */}\r\n          <HighScoreCards store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Americano store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"skillsta.jpg\" alt=\"skillzta\" />\r\n      {/* <video\r\n        id=\"intro\"\r\n        autoPlay\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster=\"https://www.dropbox.com/s/xwpgpl1pz0xv42k/intro.jpg?raw=1\"\r\n      >\r\n        <source\r\n          src=\"https://www.dropbox.com/s/j6ev3gevrqj78wx/intro.mp4?raw=1\"\r\n          type=\"video/mp4\"\r\n        />\r\n      </video> */}\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          skillzta\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Grunder\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Attribute = {\r\n  BAL: \"KON\",\r\n  THE: \"TEK\",\r\n  DRI: \"DRI\",\r\n  PHY: \"FYS\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    attribute: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get attributeText() {\r\n      return Attribute[self.attribute];\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isActiveSeason() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.currentSeason === self.season;\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n\r\n    get displayText() {\r\n      return `${self.categoryName}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    },\r\n    setStatus(newStatus, comment) {\r\n      self.status = newStatus;\r\n      self.comment = comment;\r\n      const levelStore = getRoot(self);\r\n      levelStore.api.updateItem(self);\r\n    },\r\n    like() {\r\n      const levelStore = getRoot(self);\r\n\r\n      const like = levelStore.likes.find(\r\n        x => x.itemId === self.id && x.userName === levelStore.loggedIn.userName\r\n      );\r\n\r\n      if (like) {\r\n        levelStore.api.unLike(like.id);\r\n      } else {\r\n        levelStore.api.like(self.id, levelStore.loggedIn.userName);\r\n      }\r\n\r\n      levelStore.refresh();\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.mov?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get likes() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.likes.filter(x => x.itemId == self.id).length;\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName}`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Likes = types\r\n  .model(\"Likes\", {\r\n    id: types.string,\r\n    itemId: types.string,\r\n    userName: types.string\r\n  })\r\n  .actions(self => ({\r\n    remove(like) {\r\n      const levelStore = getRoot(self);\r\n      levelStore.likes.remove(like);\r\n    }\r\n  }));\r\nexport default Likes;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\n// const getCountByAttribute = (attribute, user) => {\r\n//   const store = user.levelStore;\r\n//   if (!user.levelStore) {\r\n//   }\r\n//   const seasonCount = store.seasons.filter(x => x.season <= store.currentSeason)\r\n//     .length;\r\n//   const thes = store.itemsFromCurrentAndOldSeason.filter(\r\n//     x =>\r\n//       x.game.attribute === attribute && x.isDone && x.userName === user.userName\r\n//   );\r\n//   const easy = thes.filter(x => x.game.category === \"EASY\");\r\n//   const medium = thes.filter(x => x.game.category === \"MEDIUM\");\r\n//   const hard = thes.filter(x => x.game.category === \"HARD\");\r\n\r\n//   let count = 50;\r\n\r\n//   if (easy.length) {\r\n//     count = count + easy.length * 10;\r\n//   }\r\n\r\n//   if (medium.length) {\r\n//     count = count + medium.length * 10;\r\n//   }\r\n\r\n//   if (hard.length) {\r\n//     count = count + hard.length * 10;\r\n//   }\r\n\r\n//   if (!count) {\r\n//     debugger;\r\n//   }\r\n\r\n//   return Math.round(count / seasonCount);\r\n// };\r\n\r\nconst getPointsByAttribute = (attribute, user) => {\r\n  return getCountByAttribute(attribute, user) * 10;\r\n};\r\n\r\nconst getCountByAttribute = (attribute, user) => {\r\n  const store = user.levelStore;\r\n  if (!user.levelStore) {\r\n  }\r\n\r\n  const thes = store.itemsFromCurrentAndOldSeason.filter(\r\n    x =>\r\n      x.game.attribute === attribute && x.isDone && x.userName === user.userName\r\n  );\r\n\r\n  return thes.length;\r\n};\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get cardImage() {\r\n      if (\r\n        self.userName === \"gk\" ||\r\n        self.userName === \"os\" ||\r\n        self.userName === \"va\"\r\n      ) {\r\n        return `./${self.userName}.png`;\r\n      }\r\n      return \"https://i.stack.imgur.com/k2fOF.png\";\r\n    },\r\n    get firstName() {\r\n      return self.name.split(\" \")[0];\r\n    },\r\n    get totalRating() {\r\n      return Math.round(\r\n        (self.THERating + self.DRIRating + self.PHYRating + self.BALRating) / 4\r\n      );\r\n    },\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      if (!levelStore.seasons) {\r\n        debugger;\r\n      }\r\n      return levelStore;\r\n    },\r\n    get THERating() {\r\n      return getPointsByAttribute(\"THE\", self);\r\n    },\r\n    get DRIRating() {\r\n      return getPointsByAttribute(\"DRI\", self);\r\n    },\r\n    get PHYRating() {\r\n      return getPointsByAttribute(\"PHY\", self);\r\n    },\r\n    get BALRating() {\r\n      return getPointsByAttribute(\"BAL\", self);\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get badgeData() {\r\n      return self.levelStore.badges.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${x.publicId}.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    Count(attribute) {\r\n      return getCountByAttribute(attribute.id, self);\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Season = types\r\n  .model(\"Season\", {\r\n    id: types.string,\r\n    season: types.integer,\r\n    startDate: types.Date,\r\n    endDate: types.Date,\r\n    friendlyName: types.string\r\n  })\r\n  .views(self => ({\r\n    get countDown() {\r\n      const oneDay = 24 * 60 * 60 * 1000;\r\n      return Math.round(\r\n        Math.abs((new Date().getTime() - self.endDate.getTime()) / oneDay)\r\n      );\r\n    },\r\n    get seasonInfoText() {\r\n      if (self.isCurrentSeason) {\r\n        return `${self.friendlyName} - ${self.countDown} dagar kvar`;\r\n      }\r\n\r\n      return `${self.friendlyName} - Ej aktiv`;\r\n    },\r\n    get isCurrentSeason() {\r\n      const store = getRoot(self);\r\n      return self.season === store.currentSeason;\r\n    },\r\n    get isViewedNow() {\r\n      const store = getRoot(self);\r\n      return self.season === store.viewSeason;\r\n    },\r\n    get startDateFriendly() {\r\n      return (\r\n        self.startDate.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.startDate.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.startDate.getDate())\r\n      );\r\n    },\r\n    get endDateFriendly() {\r\n      return (\r\n        self.endDate.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.endDate.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.endDate.getDate())\r\n      );\r\n    }\r\n  }));\r\n\r\nexport default Season;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.number,\r\n    name: types.string,\r\n    image: types.string\r\n  })\r\n  .actions(self => ({}));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\nimport Player from \"./Player\";\r\n\r\nconst Team = types\r\n  .model(\"Team\", {\r\n    players: types.array(Player)\r\n  })\r\n  .volatile(self => ({\r\n    goals: 0\r\n  }))\r\n  .views(self => ({\r\n    get uniqueId() {\r\n      return self.players.reduce((a, b) => a + (b[\"id\"] || \"\"), \"\");\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setGoals(goal) {\r\n      if (!isNaN(goal)) {\r\n        self.goals = parseInt(goal, 10);\r\n      } else {\r\n        self.goals = 0;\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default Team;\r\n","import { types } from \"mobx-state-tree\";\r\nimport Team from \"./Team\";\r\n\r\nconst Game = types\r\n  .model(\"Game\", {\r\n    gameName: types.string,\r\n    team1: types.maybeNull(Team),\r\n    team2: types.maybeNull(Team)\r\n  })\r\n  .volatile(self => ({}))\r\n  .actions(self => ({}));\r\n\r\nexport default Game;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport Likes from \"./Likes\";\r\nimport User from \"./User\";\r\nimport Season from \"./Season\";\r\nimport Game from \"./Game\";\r\n\r\nconst americanoPlayerList = [\r\n  { id: 1, name: \"Gustav\", image: \"gklag.png\" },\r\n  { id: 2, name: \"Love\", image: \"lolag.png\" },\r\n  { id: 3, name: \"Oskar\", image: \"oslag.png\" },\r\n  { id: 4, name: \"Alfred\", image: \"aslag.png\" },\r\n  { id: 5, name: \"Arvid\", image: \"allag.png\" },\r\n  { id: 6, name: \"Douglas\", image: \"dblag.png\" }\r\n];\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst Attributes = [\r\n  { id: \"BAL\", short: \"KON\", text: \"KONTROLL\", image: \"BAL.jpg\" },\r\n  { id: \"THE\", short: \"TEK\", text: \"TEKNIK\", image: \"THE.jpg\" },\r\n  { id: \"DRI\", short: \"DRI\", text: \"DRIBBLING\", image: \"DRI.jpg\" },\r\n  { id: \"PHY\", short: \"FYS\", text: \"FYSIK\", image: \"PHY.jpg\" },\r\n  { id: \"OWN\", short: \"OWN\", text: \"EGNA SKILLS\", image: \"OWN.jpg\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    seasons: types.array(Season),\r\n    badges: types.array(Item),\r\n    likes: types.array(Likes),\r\n    americano: types.maybeNull(types.array(Game))\r\n  })\r\n  .views(self => ({\r\n    get americanoPlayers() {\r\n      return americanoPlayerList;\r\n    },\r\n    get americanoStat() {\r\n      const stat = [];\r\n      self.americanoPlayers.forEach(p => {\r\n        const item = { player: p };\r\n\r\n        item.goals = 0;\r\n\r\n        self.americano.forEach(g => {\r\n          if (g.team1.players.find(pp => pp.id === p.id)) {\r\n            item.goals += g.team1.goals;\r\n          } else {\r\n            item.goals += g.team2.goals;\r\n          }\r\n        });\r\n\r\n        stat.push(item);\r\n      });\r\n\r\n      return stat\r\n        .sort((a, b) => {\r\n          var x = a.goals;\r\n          var y = b.goals;\r\n          return x < y ? -1 : x > y ? 1 : 0;\r\n        })\r\n        .reverse();\r\n    },\r\n    get americanoReverse() {\r\n      return self.americano.reverse();\r\n    },\r\n    get filterLevelsByAttribute() {\r\n      const filteredLevels = self.levels.filter(\r\n        x => x.attribute === self.selectedAttribute.id\r\n      );\r\n\r\n      return filteredLevels;\r\n    },\r\n    get viewSeasonObject() {\r\n      return self.seasons.find(x => x.season === self.viewSeason);\r\n    },\r\n    get seasonsWithoutView() {\r\n      return self.seasons.filter(x => x.season !== self.viewSeason);\r\n    },\r\n    get currentSeasonObject() {\r\n      return self.seasons.find(x => x.season === self.currentSeason);\r\n    },\r\n    get itemsFromCurrentAndOldSeason() {\r\n      return self.badges.filter(x => x.season <= self.currentSeason);\r\n    },\r\n    get filteredItems() {\r\n      if (self.loggedIn.userName === \"admin\") {\r\n        return self.items;\r\n      }\r\n\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      var byHighscore = self.users.filter(x => x.userName !== \"admin\").slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.totalRating;\r\n        var y = b.totalRating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      if (self.levelFilter.id === 0) {\r\n        return self.levels.filter(x => x.season === self.viewSeason);\r\n      }\r\n\r\n      if (self.levelFilter.id === 1) {\r\n        return self.levels.filter(\r\n          x => !x.isDone && x.season === self.viewSeason\r\n        );\r\n      }\r\n\r\n      if (self.levelFilter.id === 2) {\r\n        return self.levels.filter(\r\n          x => x.isDone && x.season === self.viewSeason\r\n        );\r\n      }\r\n\r\n      return [];\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get attributes() {\r\n      return Attributes;\r\n    },\r\n    get americanoGameCount() {\r\n      return self.americanoGames.length;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedProfile: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: null,\r\n    viewSeason: null,\r\n    hasAnimatedCards: false,\r\n    selectedAttribute: null\r\n  }))\r\n  .actions(self => ({\r\n    removeUser() {\r\n      self.users.remove(self.users[0]);\r\n    },\r\n    getNewGame() {\r\n      var shuffled = self.americanoPlayers.sort(function() {\r\n        return 0.5 - Math.random();\r\n      });\r\n\r\n      let players1 = shuffled.slice(0, 3);\r\n      players1 = players1.sort(function(a, b) {\r\n        var textA = a.name.toUpperCase();\r\n        var textB = b.name.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n      let players2 = shuffled.slice(3, 6);\r\n      players2 = players2.sort(function(a, b) {\r\n        var textA = a.name.toUpperCase();\r\n        var textB = b.name.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n\r\n      let game = {\r\n        gameName: `Match ${self.americano.length + 1}`,\r\n        team1: { players: players1 },\r\n        team2: { players: players2 }\r\n      };\r\n\r\n      //kolla om det redan finns\r\n      //hämta då ny\r\n      const uniqueId = players1.reduce((a, b) => a + (b[\"id\"] || \"\"), \"\");\r\n      console.log(uniqueId);\r\n\r\n      self.americano.forEach(g => {\r\n        if (g.team1.uniqueId === uniqueId || g.team2.uniqueId === uniqueId) {\r\n          console.log(\"dublett\", uniqueId);\r\n          game = self.getNewGame();\r\n        }\r\n      });\r\n\r\n      return game;\r\n    },\r\n    americanoRandom() {\r\n      const game = self.getNewGame();\r\n      const mobxGame = Game.create(game);\r\n\r\n      self.americano.push(mobxGame);\r\n\r\n      //applySnapshot(self.americano, game);\r\n    },\r\n    setHasAnimatedCards(value) {\r\n      self.hasAnimatedCards = value;\r\n    },\r\n    setStartSeason(season) {\r\n      self.viewSeason = season;\r\n      self.currentSeason = season;\r\n    },\r\n    async switchSeason(season) {\r\n      self.viewSeason = season.season;\r\n      await self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectProfile(profile) {\r\n      self.selectedProfile = profile;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    selectAttribute(attribute) {\r\n      console.log(attribute);\r\n      self.selectedAttribute = attribute;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var seasons = await self.api.fetchSeasons();\r\n\r\n      if (self.currentSeason === null) {\r\n        seasons.forEach(s => {\r\n          var startDate = new Date(s.fields.startDate);\r\n          var endDate = new Date(s.fields.endDate);\r\n          var check = new Date();\r\n\r\n          if (check > startDate && check < endDate) {\r\n            self.setStartSeason(s.fields.season);\r\n          }\r\n        });\r\n      }\r\n\r\n      var levels = await self.api.fetchLevels(self.viewSeason);\r\n      var items = await self.api.fetchItems(self.viewSeason);\r\n      var likes = await self.api.fetchLikes();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        seasons: [],\r\n        badges: [],\r\n        likes: []\r\n      };\r\n\r\n      seasons.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.startDate = new Date(elm.fields.startDate);\r\n        elm.fields.endDate = new Date(elm.fields.endDate);\r\n        data.seasons.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      likes.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.likes.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.badges.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items\r\n        .filter(x => x.fields.season === self.viewSeason)\r\n        .forEach(elm => {\r\n          elm.fields.id = elm.id;\r\n          elm.fields.createdTime = new Date(elm.createdTime);\r\n          data.items.push(elm.fields);\r\n        });\r\n\r\n      data.americano = [];\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      if (self.loggedIn) {\r\n        self.updateUser(self.loggedIn);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"video\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const item = {\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id,\r\n          level: level.level,\r\n          status: \"WAITINGFORAPPROVAL\",\r\n          season: self.currentSeason,\r\n          fileType: isImage ? \"image\" : \"video\"\r\n        };\r\n\r\n        self.api.insertItem(item);\r\n\r\n        self.refresh();\r\n        //self.addItem(item);\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import Airtable from \"airtable\";\r\n\r\nconst base = new Airtable({ apiKey: \"keyHQ5GM7ktar7YtG\" }).base(\r\n  \"appC7N77wl4iVEXGD\"\r\n);\r\n\r\nconst config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/appC7N77wl4iVEXGD\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view, filterByFromula, fields }) {\r\n    const conf = Object.assign({}, config);\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    let includeFields = \"\";\r\n    if (fields) {\r\n      includeFields = `${fields}&`;\r\n    }\r\n\r\n    if (!filterByFromula) {\r\n      filterByFromula = \"\";\r\n    }\r\n\r\n    const url = `${config.url}/${conf.table}?${includeFields}maxRecords=${conf.maxRecords}&view=${conf.view}${filterByFromula}`;\r\n\r\n    return new Request(url, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: `Bearer ${conf.apiKey}`\r\n      })\r\n    });\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    console.log(user.JSON);\r\n    const u = {\r\n      id: user.id,\r\n      fields: {\r\n        name: user.name,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        profileImage: user.profileImage,\r\n        favoriteTeam: user.favoriteTeam,\r\n        playerTeam: user.playerTeam,\r\n        position: user.position,\r\n        shirtNumber: user.shirtNumber,\r\n        lastFetch: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`\r\n      }\r\n    };\r\n\r\n    this.update(\"Users\", u);\r\n  },\r\n  async fetchSeasons() {\r\n    const data = await base(\"Seasons\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevels(season = 0) {\r\n    return this.response({\r\n      table: \"Levels\",\r\n      filterByFromula: `&filterByFormula=season%3D${season}`\r\n    });\r\n  },\r\n  async fetchItems(season = 0) {\r\n    return this.response({\r\n      table: \"Items\",\r\n      filterByFromula: `&filterByFormula=season%3D${season}`\r\n    });\r\n  },\r\n  async fetchLikes() {\r\n    const data = await base(\"Likes\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  insertItem(item) {\r\n    fetch(\r\n      new Request(`${config.url}/Items`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: item\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  },\r\n  updateItem(item) {\r\n    const url = `${config.url}/Items/${item.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            userName: item.userName,\r\n            publicId: item.publicId,\r\n            level: item.level,\r\n            status: item.status,\r\n            sharedPath: item.sharedPath,\r\n            comment: item.comment,\r\n            season: item.season,\r\n            fileType: item.fileType,\r\n            posterPath: item.posterPath\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchUsers() {\r\n    const data = await base(\"Users\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  like(itemId, userName) {\r\n    const u = {\r\n      fields: {\r\n        userName,\r\n        itemId\r\n      }\r\n    };\r\n\r\n    this.create(\"Likes\", u);\r\n  },\r\n  unLike(id) {\r\n    this.delete(\"Likes\", id);\r\n  },\r\n  delete(table, id) {\r\n    base(table).destroy([id], function(err, deletedRecords) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      console.log(\"Deleted\", deletedRecords.length, \"records\");\r\n    });\r\n  },\r\n  create(table, item) {\r\n    base(table).create([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.getId());\r\n      });\r\n    });\r\n  },\r\n  update(table, item) {\r\n    base(table).update([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.get(\"name\"));\r\n      });\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/SkillstaApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}